/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Casino, CasinoInterface } from "../Casino";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_potPrizePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_potIncomePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_staticPrize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ownerIncomePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_queuePrizeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_biddingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeToLive",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numbersRange",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Empty",
    type: "error",
  },
  {
    inputs: [],
    name: "biddingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_biddingAmount",
        type: "uint256",
      },
    ],
    name: "changeBiddingAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numbersRange",
        type: "uint256",
      },
    ],
    name: "changeNumbersRange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ownerIncomePercentage",
        type: "uint256",
      },
    ],
    name: "changeOwnerIncomePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_potIncomePercentage",
        type: "uint256",
      },
    ],
    name: "changePotIncomePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percentage",
        type: "uint256",
      },
    ],
    name: "changePotPrizePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_queuePrizeAmount",
        type: "uint256",
      },
    ],
    name: "changeQueuePrizeAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_staticPrize",
        type: "uint256",
      },
    ],
    name: "changeStaticPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timeToLive",
        type: "uint256",
      },
    ],
    name: "changeTimeToLive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "changeToBePaid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cleanQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "getMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "guessTheNumber",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "numbersRange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerIncomePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "potIncomePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "potPrizePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queue",
    outputs: [
      {
        internalType: "int256",
        name: "_begin",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_end",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueAvailableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueBack",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeAdded",
            type: "uint256",
          },
        ],
        internalType: "struct DoubleEndedQueue.CasinoData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueFront",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeAdded",
            type: "uint256",
          },
        ],
        internalType: "struct DoubleEndedQueue.CasinoData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queuePrizeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueTakenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staticPrize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeToLive",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "toBePaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawOwner",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526000600b556000600c556000600d553480156200002057600080fd5b50604051620021ab380380620021ab83398181016040528101906200004691906200013b565b33600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508760008190555086600181905550856002819055508460038190555083600481905550826005819055508160068190555080600781905550620000d66008620000e460201b6200157f1760201c565b505050505050505062000204565b600081600001819055506000816001018190555050565b600080fd5b6000819050919050565b620001158162000100565b81146200012157600080fd5b50565b60008151905062000135816200010a565b92915050565b600080600080600080600080610100898b0312156200015f576200015e620000fb565b5b60006200016f8b828c0162000124565b9850506020620001828b828c0162000124565b9750506040620001958b828c0162000124565b9650506060620001a88b828c0162000124565b9550506080620001bb8b828c0162000124565b94505060a0620001ce8b828c0162000124565b93505060c0620001e18b828c0162000124565b92505060e0620001f48b828c0162000124565b9150509295985092959890939650565b611f9780620002146000396000f3fe6080604052600436106101dc5760003560e01c8063ab91c7b011610102578063dc471e4e11610095578063e691652511610064578063e691652514610633578063edacd1fb1461065e578063fa5a8bd014610689578063fb8de915146106b2576101e3565b8063dc471e4e14610588578063de026229146105b3578063e10d29ee146105de578063e2ae282b1461060a576101e3565b8063b64cc90a116100d1578063b64cc90a146104ed578063c05d26f214610518578063cc1f8f7814610541578063d4f639d71461056c576101e3565b8063ab91c7b014610457578063ad865aad14610482578063b26943d7146104ad578063b2df0ca2146104d6576101e3565b806352a4de861161017a5780638a0b34ad116101495780638a0b34ad1461039d5780638da5cb5b146103c65780638dfab315146103f15780639a61cbee1461041a576101e3565b806352a4de8614610300578063576f685a1461032b57806360dde4c2146103565780636ef98b2114610381576101e3565b80633ccfd60b116101b65780633ccfd60b146102775780634ba2363a146102815780634f0efff0146102ac5780635295df34146102d7576101e3565b80630ea577af146101e85780631a4b92a71461021157806326b230201461023a576101e3565b366101e357005b600080fd5b3480156101f457600080fd5b5061020f600480360381019061020a9190611877565b6106dd565b005b34801561021d57600080fd5b5061023860048036038101906102339190611877565b610777565b005b34801561024657600080fd5b50610261600480360381019061025c91906118a4565b610811565b60405161026e91906118f3565b60405180910390f35b61027f61082d565b005b34801561028d57600080fd5b50610296610a0c565b6040516102a391906118f3565b60405180910390f35b3480156102b857600080fd5b506102c1610a12565b6040516102ce91906118f3565b60405180910390f35b3480156102e357600080fd5b506102fe60048036038101906102f99190611877565b610a18565b005b34801561030c57600080fd5b50610315610ab2565b60405161032291906118f3565b60405180910390f35b34801561033757600080fd5b50610340610ab8565b60405161034d91906118f3565b60405180910390f35b34801561036257600080fd5b5061036b610abe565b60405161037891906119a0565b60405180910390f35b61039b60048036038101906103969190611877565b610b4a565b005b3480156103a957600080fd5b506103c460048036038101906103bf91906119e7565b610c89565b005b3480156103d257600080fd5b506103db610d73565b6040516103e89190611a48565b60405180910390f35b3480156103fd57600080fd5b5061041860048036038101906104139190611877565b610d99565b005b34801561042657600080fd5b50610441600480360381019061043c9190611a63565b610e33565b60405161044e91906118f3565b60405180910390f35b34801561046357600080fd5b5061046c610e4b565b60405161047991906118f3565b60405180910390f35b34801561048e57600080fd5b50610497610e5c565b6040516104a491906118f3565b60405180910390f35b3480156104b957600080fd5b506104d460048036038101906104cf9190611877565b610e62565b005b3480156104e257600080fd5b506104eb610efc565b005b3480156104f957600080fd5b50610502611020565b60405161050f91906118f3565b60405180910390f35b34801561052457600080fd5b5061053f600480360381019061053a9190611877565b611026565b005b34801561054d57600080fd5b506105566110c0565b60405161056391906119a0565b60405180910390f35b61058660048036038101906105819190611877565b61114c565b005b34801561059457600080fd5b5061059d61141b565b6040516105aa91906118f3565b60405180910390f35b3480156105bf57600080fd5b506105c8611421565b6040516105d591906118f3565b60405180910390f35b3480156105ea57600080fd5b506105f3611427565b604051610601929190611aa9565b60405180910390f35b34801561061657600080fd5b50610631600480360381019061062c9190611877565b611439565b005b34801561063f57600080fd5b506106486114d3565b60405161065591906118f3565b60405180910390f35b34801561066a57600080fd5b506106736114d9565b60405161068091906118f3565b60405180910390f35b34801561069557600080fd5b506106b060048036038101906106ab9190611877565b6114df565b005b3480156106be57600080fd5b506106c7611579565b6040516106d491906118f3565b60405180910390f35b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076490611b2f565b60405180910390fd5b8060048190555050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90611b2f565b60405180910390fd5b8060018190555050565b60008183111561082357829050610827565b8190505b92915050565b610835610efc565b6000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116108b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ae90611bc1565b60405180910390fd5b47600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093090611c79565b60405180910390fd5b6000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a08573d6000803e3d6000fd5b5050565b600b5481565b60055481565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9f90611b2f565b60405180910390fd5b8060028190555050565b60075481565b60035481565b610ac6611805565b610ad06008611596565b6040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050905090565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd190611b2f565b60405180910390fd5b47811115610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1490611d0b565b60405180910390fd5b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c85573d6000803e3d6000fd5b5050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1090611b2f565b60405180910390fd5b80600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d689190611d5a565b925050819055505050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2090611b2f565b60405180910390fd5b8060068190555050565b600f6020528060005260406000206000915090505481565b6000610e5760086115fe565b905090565b60005481565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee990611b2f565b60405180910390fd5b8060008190555050565b5b610f076008611612565b61101e576000610f176008611627565b9050426006548260020154610f2c9190611d5a565b11610fe7576000600c548260010154610f459190611db0565b1115610fd757600c548160010154610f5d9190611db0565b600f60008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fcf9190611d5a565b925050819055505b610fe16008611692565b50611018565b6000600c548260010154610ffb9190611db0565b14156110115761100b6008611692565b50611017565b5061101e565b5b50610efd565b565b60045481565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ad90611b2f565b60405180910390fd5b8060078190555050565b6110c8611805565b6110d26008611627565b6040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050905090565b600554341015611191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118890611e56565b60405180910390fd5b600061119b611755565b9050808214156112595760006111b160086115fe565b6004546111be9190611e76565b905060006111ce82600254610811565b9050818114156111fc57600454600c60008282546111ec9190611d5a565b925050819055506111fb610efc565b5b80600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461124b9190611d5a565b925050819055505050611417565b6001600754826112699190611eff565b6112739190611d5a565b8214156113295760006064600b5460005461128e9190611e76565b6112989190611f30565b905060006112a882600254610811565b9050818114156112cc5781600b60008282546112c49190611db0565b925050819055505b80600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461131b9190611d5a565b925050819055505050611416565b600060646003543461133b9190611e76565b6113459190611f30565b905060006064600154346113599190611e76565b6113639190611f30565b905080600b60008282546113779190611d5a565b92505081905550611386610efc565b6113e4600860405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600c548587346113c29190611db0565b6113cc9190611db0565b6113d69190611d5a565b815260200142815250611777565b8082346113f19190611db0565b6113fb9190611db0565b600d600082825461140c9190611d5a565b9250508190555050505b5b5050565b60015481565b600c5481565b60088060000154908060010154905082565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c090611b2f565b60405180910390fd5b8060058190555050565b600d5481565b60025481565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461156f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156690611b2f565b60405180910390fd5b8060038190555050565b60065481565b600081600001819055506000816001018190555050565b60006115a182611612565b156115d8576040517f3db2a12a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082600001549050826002016000828152602001908152602001600020915050919050565b600081600001548260010154039050919050565b60008160000154826001015413159050919050565b600061163282611612565b15611669576040517f3db2a12a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018360010154039050826002016000828152602001908152602001600020915050919050565b600061169d82611612565b156116d4576040517f3db2a12a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600183600101540390508260020160008281526020019081526020016000209150826002016000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160009055505080836001018190555050919050565b6000600160075460006117689190611eff565b6117729190611d5a565b905090565b6000600183600001540390508183600201600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155905050808360000181905550505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b600080fd5b6000819050919050565b61185481611841565b811461185f57600080fd5b50565b6000813590506118718161184b565b92915050565b60006020828403121561188d5761188c61183c565b5b600061189b84828501611862565b91505092915050565b600080604083850312156118bb576118ba61183c565b5b60006118c985828601611862565b92505060206118da85828601611862565b9150509250929050565b6118ed81611841565b82525050565b600060208201905061190860008301846118e4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119398261190e565b9050919050565b6119498161192e565b82525050565b61195881611841565b82525050565b6060820160008201516119746000850182611940565b506020820151611987602085018261194f565b50604082015161199a604085018261194f565b50505050565b60006060820190506119b5600083018461195e565b92915050565b6119c48161192e565b81146119cf57600080fd5b50565b6000813590506119e1816119bb565b92915050565b600080604083850312156119fe576119fd61183c565b5b6000611a0c858286016119d2565b9250506020611a1d85828601611862565b9150509250929050565b6000611a328261190e565b9050919050565b611a4281611a27565b82525050565b6000602082019050611a5d6000830184611a39565b92915050565b600060208284031215611a7957611a7861183c565b5b6000611a87848285016119d2565b91505092915050565b6000819050919050565b611aa381611a90565b82525050565b6000604082019050611abe6000830185611a9a565b611acb6020830184611a9a565b9392505050565b600082825260208201905092915050565b7f4f6e6c79206f776e657221000000000000000000000000000000000000000000600082015250565b6000611b19600b83611ad2565b9150611b2482611ae3565b602082019050919050565b60006020820190508181036000830152611b4881611b0c565b9050919050565b7f596f752063616e277420776974686472617720796574202d204e6f7420616c6c60008201527f6f77656420746f20776974686472617720302066756e64732100000000000000602082015250565b6000611bab603983611ad2565b9150611bb682611b4f565b604082019050919050565b60006020820190508181036000830152611bda81611b9e565b9050919050565b7f536f7272792c20746865726520617265206e6f20656e6f7567682066756e647360008201527f20696e207468652067616d6520636f6e74726163742c2077696c6c2066756e6460208201527f20697420736f6f6e210000000000000000000000000000000000000000000000604082015250565b6000611c63604983611ad2565b9150611c6e82611be1565b606082019050919050565b60006020820190508181036000830152611c9281611c56565b9050919050565b7f4e6f20656e6f7567682062616c616e636520666f722074686520616d6f756e7460008201527f2072657175657374656421000000000000000000000000000000000000000000602082015250565b6000611cf5602b83611ad2565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d6582611841565b9150611d7083611841565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611da557611da4611d2b565b5b828201905092915050565b6000611dbb82611841565b9150611dc683611841565b925082821015611dd957611dd8611d2b565b5b828203905092915050565b7f596f75206469646e2774207061792074686520726571756972656420616d6f7560008201527f6e7420666f722070617274696369706174696e67210000000000000000000000602082015250565b6000611e40603583611ad2565b9150611e4b82611de4565b604082019050919050565b60006020820190508181036000830152611e6f81611e33565b9050919050565b6000611e8182611841565b9150611e8c83611841565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ec557611ec4611d2b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f0a82611841565b9150611f1583611841565b925082611f2557611f24611ed0565b5b828206905092915050565b6000611f3b82611841565b9150611f4683611841565b925082611f5657611f55611ed0565b5b82820490509291505056fea26469706673582212206f90e13ddf46153d48e24040d3a5191b6831846f13768b0937988776c918c86864736f6c63430008090033";

type CasinoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CasinoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Casino__factory extends ContractFactory {
  constructor(...args: CasinoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _potPrizePercentage: PromiseOrValue<BigNumberish>,
    _potIncomePercentage: PromiseOrValue<BigNumberish>,
    _staticPrize: PromiseOrValue<BigNumberish>,
    _ownerIncomePercentage: PromiseOrValue<BigNumberish>,
    _queuePrizeAmount: PromiseOrValue<BigNumberish>,
    _biddingAmount: PromiseOrValue<BigNumberish>,
    _timeToLive: PromiseOrValue<BigNumberish>,
    _numbersRange: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Casino> {
    return super.deploy(
      _potPrizePercentage,
      _potIncomePercentage,
      _staticPrize,
      _ownerIncomePercentage,
      _queuePrizeAmount,
      _biddingAmount,
      _timeToLive,
      _numbersRange,
      overrides || {}
    ) as Promise<Casino>;
  }
  override getDeployTransaction(
    _potPrizePercentage: PromiseOrValue<BigNumberish>,
    _potIncomePercentage: PromiseOrValue<BigNumberish>,
    _staticPrize: PromiseOrValue<BigNumberish>,
    _ownerIncomePercentage: PromiseOrValue<BigNumberish>,
    _queuePrizeAmount: PromiseOrValue<BigNumberish>,
    _biddingAmount: PromiseOrValue<BigNumberish>,
    _timeToLive: PromiseOrValue<BigNumberish>,
    _numbersRange: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _potPrizePercentage,
      _potIncomePercentage,
      _staticPrize,
      _ownerIncomePercentage,
      _queuePrizeAmount,
      _biddingAmount,
      _timeToLive,
      _numbersRange,
      overrides || {}
    );
  }
  override attach(address: string): Casino {
    return super.attach(address) as Casino;
  }
  override connect(signer: Signer): Casino__factory {
    return super.connect(signer) as Casino__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CasinoInterface {
    return new utils.Interface(_abi) as CasinoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Casino {
    return new Contract(address, _abi, signerOrProvider) as Casino;
  }
}
